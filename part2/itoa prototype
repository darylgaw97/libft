#include <stdio.h>
#include <stdlib.h>

char *ft_itoa(int n);
static int ft_numstrlen(int n);
static char *ft_makestr(long n, int numstrlen);
int main(void)
{
    int n = -2147483648;
    printf("final: %s\n", ft_itoa(n));
}

char *ft_itoa(int n)
{
    char *ret = malloc(ft_numstrlen(n) + 2);
    int i;
    char *temp = NULL;
    int j;

    if (ret == NULL)
        return (NULL);
    i = 0;
    if (n < 0)
    {
        ret[i] = '-';
        i++;
    }
    temp = ft_makestr(n, ft_numstrlen(n));
    j = 0;
    while (temp[j])
    {
        ret[i] = temp[j];
        i++;
        j++;
    }
    ret[i] = '\0';
    return (ret);
}

static char *ft_makestr(long n, int numstrlen)
{
    char *ret = malloc(11);
    long divider;
    int i;
    int j;

    divider = 1;
    i = 0;
    while (i < numstrlen - 2)
    {
        divider *= 10;
        i++;
    }
    j = 0;
    while (j < numstrlen - 1)
    {
        ret[j] = (n % (divider * 10) / divider);
        if (ret[j] < 0)
            ret[j] *= -1;
        ret[j] += '0';
        divider /= 10;
        j++;
    }
    return (ret);
}

static int ft_numstrlen(int n)
{
    int len;

    len = 1;
    if (n < 0)
        len++;
    while (n / 10 != 0)
    {
        n /= 10;
        len++;
    }
    printf("len: %i\n", len);
    return (len);
}